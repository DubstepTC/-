#include <iostream>
#include <conio.h>
#include <windows.h> 
#include <iomanip>
using namespace std;

int main() {
	setlocale(0, "");
	int key, key2;
	const string C_RED = "\x1b[91m";
	const string C_PURPLE = "\x1b[95m";
	const string C_YELLOW = "\x1b[93m";
	const string C_BLUE = "\x1b[94m";
	const string C_WHITE = "\x1b[97m";
	const string C_GREEN = "\x1b[92m";
	const string C_Bir = "\x1b[96m";
	string color = "";

	while(true){
		cout << C_GREEN << "[ + ] Программа - “Лабиринт”\n\n" << C_WHITE;
		cout << C_Bir << "[ + ] Размер карты:\n\n"<< C_WHITE;
		cout << C_BLUE << "[ 1 ] 15 x 15\n";
		cout << "[ 2 ] 20 x 20\n";
		cout << "[ 3 ] 30 x 30\n\n" << C_WHITE;
		cout << C_Bir << "[ 4 ] Настроить цвет лабиринта\n" << C_WHITE;
		cout << C_Bir << "[ 5 ] Выход\n\n" << C_WHITE;
		cout << C_Bir << "[ + ] Выберите нужный пункт:" << C_WHITE;
		
		key = _getch();

		if (key == 49) {
			system("cls");
			int arr[15][15] = {
				{1,1,1,1,1,1,1,1,1,1,1,1,1,0,1},
				{1,1,0,1,1,0,0,0,0,0,0,0,0,0,1},
				{1,1,0,1,1,0,1,1,1,1,1,1,1,1,1},
				{1,1,0,0,0,0,0,0,0,0,0,1,0,1,1},
				{1,1,1,1,1,1,1,0,1,1,1,1,0,1,1},
				{1,1,1,1,1,1,1,0,1,1,1,0,0,1,1},
				{1,1,0,0,0,0,0,0,0,0,0,0,1,1,1},
				{1,0,0,1,1,1,1,1,1,1,1,0,1,1,1},
				{1,0,1,1,1,1,1,1,1,1,1,0,1,1,1},
				{1,0,1,0,0,0,0,0,0,0,0,0,1,1,1},
				{1,0,1,0,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,0,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,0,0,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,0,0,0,0,0,0,0,0,0,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,0,1,1}
			};
			for (int i = 0; i < 15; i++) {
				for (int p = 0; p < 15; p++) {
					if (arr[i][p] == 1) {
						Sleep(20);
						cout << color << '#';
					}
					else if (arr[i][p] == 0) {
						cout << ' ';
					}
					cout << ' ' << C_WHITE;
				}
				cout << '\n';
			}
		}
		else if (key == 50) {
			system("cls");
			int arr[20][20] = {
				{1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1},
				{1,1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,0,1},
				{1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1},
				{1,0,0,0,1,1,1,1,1,1,0,1,0,0,0,1,1,1,0,1},
				{1,0,1,0,1,1,1,0,0,0,0,1,0,1,1,1,1,1,0,1},
				{1,0,1,0,1,1,1,1,1,1,0,1,0,1,0,0,0,0,0,1},
				{1,0,1,0,1,1,1,1,1,0,0,0,0,1,0,1,1,0,1,1},
				{1,0,1,0,1,1,1,1,1,1,0,1,0,0,0,1,1,0,1,1},
				{1,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1},
				{1,1,0,0,0,0,0,1,1,1,1,1,0,1,0,0,0,1,1,1},
				{1,1,0,1,1,1,0,1,1,1,1,1,0,0,0,1,0,1,0,1},
				{1,1,0,1,1,1,0,1,1,1,1,1,1,0,1,1,0,1,0,1},
				{1,1,0,1,1,1,0,0,0,0,0,0,0,0,1,1,0,1,0,1},
				{1,1,0,1,1,1,1,1,1,0,1,1,1,0,1,1,0,0,0,1},
				{1,1,0,0,0,0,1,1,1,0,1,1,1,0,1,1,1,1,1,1},
				{1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1},
				{1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
			};
			for (int i = 0; i < 20; i++) {
				for (int p = 0; p < 20; p++) {
					if (arr[i][p] == 1) {
						Sleep(10);
						cout << color << '#';
					}
					else if (arr[i][p] == 0) {
						cout << ' ';
					}
					cout << ' ' << C_WHITE;
				}
				cout << '\n';
			}
		}
		else if (key == 51) {
			system("cls");
			int arr[30][30] = {
				{1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,0,0,0,1,1,1,1,0,1},
				{1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1},
				{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1},
				{1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,1,1,0,1},
				{1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1},
				{1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1},
				{1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,1},
				{1,1,1,0,0,0,0,1,0,0,0,1,1,0,0,0,0,1,0,1,1,1,1,1,1,1,1,0,1,1},
				{1,1,1,1,1,1,0,1,0,1,0,1,1,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,1,1},
				{1,1,1,1,1,1,0,0,0,1,0,1,1,0,1,1,0,1,0,1,0,1,1,1,1,1,0,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,0,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,0,0,0,1,1,1,1,1,0,1,1,1},
				{1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1},
				{1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,1,1,1,1,0,1,1,1},
				{1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,0,0,0,1,1,1},
				{1,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1},
				{1,0,0,0,0,0,1,1,1,0,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1},
				{1,1,1,1,1,0,1,1,1,0,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1},
				{1,1,1,1,1,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,0,1,1},
				{1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1},
				{1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,1,1},
				{1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1},
				{1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1},
				{1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,1,1,1,0,1,1,0,0,0,0,1,1,0,1,1},
				{1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,1,1,1,1,1,0,1,1},
				{1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
			};
			for (int i = 0; i < 30; i++) {
				for (int p = 0; p < 30; p++) {
					if (arr[i][p] == 1) {
						Sleep(10);
						cout << color << '#';
					}
					else if (arr[i][p] == 0) {
						cout << ' ';
					}
					cout << ' ' << C_WHITE;
				}
				cout << '\n';
			}
		}
		else if (key == 52) {
			system("cls");
			cout << C_Bir << "Вы выбрали настройку цвета лабиринта\n\n";
			cout << "[ 1 ] Красный\n";
			cout << "[ 2 ] Синий\n";
			cout << "[ 3 ] Зелёный\n";
			cout << "[ 4 ] Пурпурный\n";
			cout << "[ 5 ] Желтый\n";
			cout << "[ 6 ] Бирюзовый\n";
			cout << "[ 7 ] Белый\n" << C_WHITE;
			key2 = _getch();

			if (key2 == 49) {
				color = C_RED;
			}
			else if (key2 == 50) {
				color = C_BLUE;
			}
			else if (key2 == 51) {
				color = C_GREEN;
			}
			else if (key2 == 52) {
				color = C_PURPLE;
			}
			else if (key2 == 53) {
				color = C_YELLOW;
			}
			else if (key2 == 54) {
				color = C_Bir;
			}
			else if (key2 == 54) {
				color = C_WHITE;
			}
			system("cls");
			continue;
		}
		else if (key == 53) {
			break;
		}
		system("pause");
		system("cls");
	}
	return 0;
}
